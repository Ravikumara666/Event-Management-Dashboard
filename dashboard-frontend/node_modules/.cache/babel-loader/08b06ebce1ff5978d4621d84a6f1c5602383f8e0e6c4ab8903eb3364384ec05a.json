{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/pages/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getTasks } from \"../utilities/aip\"; // Replace with the actual API call\nimport TaskCard from \"../component/TaskCard\"; // Assuming you have TaskCard as a child component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    getTasks().then(response => setTasks(response.data)); // Replace with actual API call\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        className: \"bg-green-500 hover:bg-green-700 text-white px-4 py-2 rounded\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showForm &&\n    /*#__PURE__*/\n    // <TaskForm onSubmit={handleAddTask} />\n    _jsxDEV(\"div\", {\n      className: \"mt-4 bg-gray-700 p-6 rounded-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6 mt-6\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) // Pass each task to TaskCard\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"PKy/F0WDZvmFgRFOuB+x1/vGxeI=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","TaskCard","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","showForm","setShowForm","then","response","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","id","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/pages/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getTasks } from \"../utilities/aip\"; // Replace with the actual API call\nimport TaskCard from \"../component/TaskCard\"; // Assuming you have TaskCard as a child component\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    getTasks().then((response) => setTasks(response.data)); // Replace with actual API call\n  }, []);\n\n  return (\n    <div>\n      {/* Add a button to toggle showing the form for adding new tasks */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\">Tasks</h1>\n        <button\n          onClick={() => setShowForm(!showForm)}\n          className=\"bg-green-500 hover:bg-green-700 text-white px-4 py-2 rounded\"\n        >\n          Add Task\n        </button>\n      </div>\n\n      {/* Optionally render a form to add new tasks */}\n      {showForm && (\n        // <TaskForm onSubmit={handleAddTask} />\n        <div className=\"mt-4 bg-gray-700 p-6 rounded-lg\">\n          {/* Your TaskForm component code can go here */}\n        </div>\n      )}\n\n      {/* Render tasks */}\n      <div className=\"space-y-6 mt-6\">\n        {tasks.map((task) => (\n          <TaskCard key={task.id} task={task} /> // Pass each task to TaskCard\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACdC,QAAQ,CAAC,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAKJ,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MAAKW,SAAS,EAAC,wCAAwC;MAAAD,QAAA,gBACrDV,OAAA;QAAIW,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7Cf,OAAA;QACEgB,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,CAACD,QAAQ,CAAE;QACtCM,SAAS,EAAC,8DAA8D;QAAAD,QAAA,EACzE;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLV,QAAQ;IAAA;IACP;IACAL,OAAA;MAAKW,SAAS,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C,CACN,eAGDf,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5BP,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdlB,OAAA,CAACF,QAAQ;QAAeoB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAC;MACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAtCID,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}