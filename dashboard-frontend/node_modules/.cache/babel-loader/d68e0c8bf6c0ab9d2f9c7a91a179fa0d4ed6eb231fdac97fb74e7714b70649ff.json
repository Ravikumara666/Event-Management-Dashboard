{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { updateTaskStatus } from \"../utilities/aip\"; // Make sure this function is implemented\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  task\n}) => {\n  _s();\n  const handleStatusChange = status => {\n    updateTaskStatus(task.id, status).then(() => {\n      // Optionally update task status in the state or notify parent component\n    });\n  };\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch tasks when event changes\n  useEffect(() => {\n    var _event;\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tasks');\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        const eventTasks = data.filter(task => task.event.id === event.id);\n        setTasks(eventTasks);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if ((_event = event) !== null && _event !== void 0 && _event.id) {\n      fetchTasks();\n    }\n  }, [event]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-700 text-white p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded\",\n          onClick: () => handleStatusChange(\"In Progress\"),\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\",\n          onClick: () => handleStatusChange(\"Completed\"),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-700 rounded-full h-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-600 h-2 rounded-full transition-all duration-300\",\n          style: {\n            width: `${task.progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","updateTaskStatus","jsxDEV","_jsxDEV","TaskCard","task","_s","handleStatusChange","status","id","then","tasks","setTasks","useState","loading","setLoading","error","setError","useEffect","_event","fetchTasks","response","fetch","ok","Error","data","json","eventTasks","filter","event","err","message","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","style","width","progress","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/TaskCard.jsx"],"sourcesContent":["import React from \"react\";\nimport { updateTaskStatus } from \"../utilities/aip\"; // Make sure this function is implemented\n\nconst TaskCard = ({ task }) => {\n  const handleStatusChange = (status) => {\n    updateTaskStatus(task.id, status).then(() => {\n      // Optionally update task status in the state or notify parent component\n    });\n  };\n\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch tasks when event changes\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tasks');\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        const eventTasks = data.filter(task => task.event.id === event.id);\n        setTasks(eventTasks);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (event?.id) {\n      fetchTasks();\n    }\n  }, [event]);\n\n  return (\n    <div className=\"bg-gray-700 text-white p-6 rounded-lg shadow-lg\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-2xl font-semibold\">{task.name}</h3>\n        <div className=\"flex space-x-4\">\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded\"\n            onClick={() => handleStatusChange(\"In Progress\")}\n          >\n            In Progress\n          </button>\n          <button\n            className=\"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\"\n            onClick={() => handleStatusChange(\"Completed\")}\n          >\n            Completed\n          </button>\n        </div>\n      </div>\n      <p className=\"mt-4\">{task.description}</p>\n      <div className=\"mt-4\">\n        {/* Add your task progress bar here */}\n        <div className=\"w-full bg-gray-700 rounded-full h-2\">\n          <div\n            className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${task.progress}%` }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}