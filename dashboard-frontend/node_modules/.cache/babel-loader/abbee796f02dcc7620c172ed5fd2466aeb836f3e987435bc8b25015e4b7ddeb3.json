{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/pages/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getTasks } from \"../utilities/aip\"; // Replace with the actual API call\nimport TaskCard from \"../component/TaskCard\";\nimport TaskForm from \"../component/TaskForm\"; // You can add a form component to add tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    getTasks().then(response => setTasks(response.data)); // Replace with actual API call\n  }, []);\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n    setShowForm(false); // Close form after adding task\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TaskCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"PKy/F0WDZvmFgRFOuB+x1/vGxeI=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","TaskCard","TaskForm","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","showForm","setShowForm","then","response","data","handleAddTask","newTask","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/pages/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getTasks } from \"../utilities/aip\"; // Replace with the actual API call\nimport TaskCard from \"../component/TaskCard\";\nimport TaskForm from \"../component/TaskForm\"; // You can add a form component to add tasks\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch tasks on component mount\n  useEffect(() => {\n    getTasks().then((response) => setTasks(response.data)); // Replace with actual API call\n  }, []);\n\n  const handleAddTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n    setShowForm(false); // Close form after adding task\n  };\n\n  return (\n    <div>\n      <TaskCard/>\n      {/* <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold\">Tasks</h1>\n        <button\n          onClick={() => setShowForm(!showForm)}\n          className=\"bg-green-500 hover:bg-green-700 text-white px-4 py-2 rounded\"\n        >\n          Add Task\n        </button>\n      </div>\n\n      {/* Render TaskForm when showForm is true */}\n      {/* {showForm && <TaskForm onSubmit={handleAddTask} />}\n\n      {/* Render tasks */}\n      {/* <div className=\"space-y-6 mt-6\">\n        {tasks.map((task) => (\n          <TaskCard key={task.id} task={task} />\n        ))} */}\n      {/* </div>  */}\n    </div>\n  );\n};\n\nexport default Tasks;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACdC,QAAQ,CAAC,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAKJ,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAIC,OAAO,IAAK;IACjCP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC;IAC7BL,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA;IAAAY,QAAA,eACEZ,OAAA,CAACH,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAoBR,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}