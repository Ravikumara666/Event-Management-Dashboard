{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [attendees, setAttendees] = useState([]); // State to store the attendees data\n  const [loading, setLoading] = useState(true); // Loading state to show loading message\n  const [error, setError] = useState(null); // Error state to handle any API errors\n\n  useEffect(() => {\n    // Fetch attendees data when the component mounts\n    const fetchAttendees = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/attendees');\n        setAttendees(response.data); // Store the fetched data in state\n        setLoading(false); // Set loading to false once data is fetched\n      } catch (error) {\n        setError('Error fetching data'); // If error, set the error state\n        setLoading(false); // Set loading to false after error\n      }\n    };\n    fetchAttendees(); // Call the fetch function\n  }, []); // Empty array ensures it runs only once, when the component mounts\n\n  // Loading message\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the list of attendees\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Attendees List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: attendees.map(attendee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [attendee.name, \" - \", attendee.email, \" - \", attendee.phone]\n      }, attendee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Fkw0Tv5Kv0J1xCEo79FlIncImCI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","attendees","setAttendees","loading","setLoading","error","setError","fetchAttendees","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","attendee","name","email","phone","id","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [attendees, setAttendees] = useState([]);  // State to store the attendees data\n  const [loading, setLoading] = useState(true);    // Loading state to show loading message\n  const [error, setError] = useState(null);        // Error state to handle any API errors\n\n  useEffect(() => {\n    // Fetch attendees data when the component mounts\n    const fetchAttendees = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/attendees');\n        setAttendees(response.data); // Store the fetched data in state\n        setLoading(false);            // Set loading to false once data is fetched\n      } catch (error) {\n        setError('Error fetching data'); // If error, set the error state\n        setLoading(false);              // Set loading to false after error\n      }\n    };\n\n    fetchAttendees(); // Call the fetch function\n  }, []); // Empty array ensures it runs only once, when the component mounts\n\n  // Loading message\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  // Error message\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  // Render the list of attendees\n  return (\n    <div>\n      <h1>Attendees List</h1>\n      <ul>\n        {attendees.map(attendee => (\n          <li key={attendee.id}>\n            {attendee.name} - {attendee.email} - {attendee.phone}\n          </li>\n        ))}\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAI;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAQ;;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC;QACnEP,YAAY,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QAC7BN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAY;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACjCF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAc;MAClC;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAIV,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAa,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;;EAEA;EACA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBjB,OAAA;MAAAa,QAAA,EACGV,SAAS,CAACe,GAAG,CAACC,QAAQ,iBACrBnB,OAAA;QAAAa,QAAA,GACGM,QAAQ,CAACC,IAAI,EAAC,KAAG,EAACD,QAAQ,CAACE,KAAK,EAAC,KAAG,EAACF,QAAQ,CAACG,KAAK;MAAA,GAD7CH,QAAQ,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV;AAACf,EAAA,CA7CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}