{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/components/EventManagement/EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { eventAPIService } from '../../services/eventAPIService';\nimport EventCard from './EventCard';\nimport AddEventForm from './AddEventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const result = await eventAPIService.getAllEvents();\n      setEvents(result.data);\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n        event: event\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useEffect","useState","eventAPIService","EventCard","AddEventForm","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","fetchEvents","result","getAllEvents","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","event","id","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/components/EventManagement/EventList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { eventAPIService } from '../../services/eventAPIService';\nimport EventCard from './EventCard';\nimport AddEventForm from './AddEventForm';\n\nconst EventList = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const result = await eventAPIService.getAllEvents();\n      setEvents(result.data);\n    };\n\n    fetchEvents();\n  }, []);\n\n  return (\n    <div>\n      <h2>Event List</h2>\n      <AddEventForm />\n      <div className=\"event-list\">\n        {events.map((event) => (\n          <EventCard key={event.id} event={event} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EventList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,MAAM,GAAG,MAAMV,eAAe,CAACW,YAAY,CAAC,CAAC;MACnDH,SAAS,CAACE,MAAM,CAACE,IAAI,CAAC;IACxB,CAAC;IAEDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA,CAACF,YAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBb,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBN,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBhB,OAAA,CAACH,SAAS;QAAgBmB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAvBID,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}