{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { updateTaskStatus } from \"../utilities/aip\"; // Ensure this function is implemented\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskCard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch tasks data when the component mounts\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks\");\n        }\n        const data = await response.json();\n        setTasks(data); // Set tasks data directly\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Handle status change for a task\n  const handleStatusChange = (taskId, status) => {\n    updateTaskStatus(taskId, status).then(() => {\n      // Optionally update task status in the state or notify parent component\n      setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n        ...task,\n        status\n      } : task));\n    });\n  };\n\n  // Loading and error states\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n\n  // Render task cards for each task\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-white mb-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-700 text-white p-6 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold\",\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded\",\n              onClick: () => handleStatusChange(task.id, \"In Progress\"),\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\",\n              onClick: () => handleStatusChange(task.id, \"Completed\"),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-700 rounded-full h-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-600 h-2 rounded-full transition-all duration-300\",\n              style: {\n                width: `${task.progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(TaskCard, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useEffect","useState","updateTaskStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskCard","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","fetch","ok","Error","data","json","err","message","handleStatusChange","taskId","status","then","prevTasks","map","task","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","description","style","width","progress","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/TaskCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { updateTaskStatus } from \"../utilities/aip\"; // Ensure this function is implemented\n\nconst TaskCard = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch tasks data when the component mounts\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks\");\n        }\n        const data = await response.json();\n        setTasks(data); // Set tasks data directly\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  // Handle status change for a task\n  const handleStatusChange = (taskId, status) => {\n    updateTaskStatus(taskId, status).then(() => {\n      // Optionally update task status in the state or notify parent component\n      setTasks(prevTasks =>\n        prevTasks.map(task =>\n          task.id === taskId ? { ...task, status } : task\n        )\n      );\n    });\n  };\n\n  // Loading and error states\n  if (loading) return <div className=\"text-white\">Loading...</div>;\n  if (error) return <div className=\"text-red-500\">Error: {error}</div>;\n\n  // Render task cards for each task\n  return (<>\n      <h1 className=\"text-3xl font-bold text-white mb-6\"></h1>\n    <div className=\"space-y-4\">\n      {tasks.map((task) => (\n        <div key={task.id} className=\"bg-gray-700 text-white p-6 rounded-lg shadow-lg\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-2xl font-semibold\">{task.name}</h3>\n            <div className=\"flex space-x-4\">\n              <button\n                className=\"bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded\"\n                onClick={() => handleStatusChange(task.id, \"In Progress\")}\n              >\n                In Progress\n              </button>\n              <button\n                className=\"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\"\n                onClick={() => handleStatusChange(task.id, \"Completed\")}\n              >\n                Completed\n              </button>\n            </div>\n          </div>\n          <p className=\"mt-4\">{task.description}</p>\n          <div className=\"mt-4\">\n            {/* Add your task progress bar here */}\n            <div className=\"w-full bg-gray-700 rounded-full h-2\">\n              <div\n                className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${task.progress}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n    </>\n  );\n};\n\nexport default TaskCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IAC7CxB,gBAAgB,CAACuB,MAAM,EAAEC,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM;MAC1C;MACAjB,QAAQ,CAACkB,SAAS,IAChBA,SAAS,CAACC,GAAG,CAACC,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKN,MAAM,GAAG;QAAE,GAAGK,IAAI;QAAEJ;MAAO,CAAC,GAAGI,IAC7C,CACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,IAAInB,OAAO,EAAE,oBAAOP,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAChE,IAAIxB,KAAK,EAAE,oBAAOT,OAAA;IAAK4B,SAAS,EAAC,cAAc;IAAAC,QAAA,GAAC,SAAO,EAACpB,KAAK;EAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAEpE;EACA,oBAAQjC,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACJ7B,OAAA;MAAI4B,SAAS,EAAC;IAAoC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1DjC,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBxB,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACd1B,OAAA;QAAmB4B,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC5E7B,OAAA;UAAK4B,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChD7B,OAAA;YAAI4B,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EAAEH,IAAI,CAACQ;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvDjC,OAAA;YAAK4B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B7B,OAAA;cACE4B,SAAS,EAAC,iDAAiD;cAC3DO,OAAO,EAAEA,CAAA,KAAMf,kBAAkB,CAACM,IAAI,CAACC,EAAE,EAAE,aAAa,CAAE;cAAAE,QAAA,EAC3D;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTjC,OAAA;cACE4B,SAAS,EAAC,mDAAmD;cAC7DO,OAAO,EAAEA,CAAA,KAAMf,kBAAkB,CAACM,IAAI,CAACC,EAAE,EAAE,WAAW,CAAE;cAAAE,QAAA,EACzD;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjC,OAAA;UAAG4B,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAEH,IAAI,CAACU;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CjC,OAAA;UAAK4B,SAAS,EAAC,MAAM;UAAAC,QAAA,eAEnB7B,OAAA;YAAK4B,SAAS,EAAC,qCAAqC;YAAAC,QAAA,eAClD7B,OAAA;cACE4B,SAAS,EAAC,4DAA4D;cACtES,KAAK,EAAE;gBAAEC,KAAK,EAAE,GAAGZ,IAAI,CAACa,QAAQ;cAAI;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GA3BEP,IAAI,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4BZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA/EID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAiFd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}