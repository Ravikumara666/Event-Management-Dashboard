{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getEvents } from '../services/api';\nimport EventCard from './EventCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await getEvents();\n        setEvents(response.data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid gap-4 p-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\",\n    children: events.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n      event: event\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useEffect","useState","getEvents","EventCard","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","fetchEvents","response","data","error","console","className","children","map","event","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/EventList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getEvents } from '../services/api';\nimport EventCard from './EventCard';\n\nconst EventList = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await getEvents();\n        setEvents(response.data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  return (\n    <div className=\"grid gap-4 p-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n      {events.map((event) => (\n        <EventCard key={event.id} event={event} />\n      ))}\n    </div>\n  );\n};\n\nexport default EventList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,SAAS,CAAC,CAAC;QAClCO,SAAS,CAACE,QAAQ,CAACC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAC,6DAA6D;IAAAC,QAAA,EACzER,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAChBb,OAAA,CAACF,SAAS;MAAgBe,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBID,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAwBf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}