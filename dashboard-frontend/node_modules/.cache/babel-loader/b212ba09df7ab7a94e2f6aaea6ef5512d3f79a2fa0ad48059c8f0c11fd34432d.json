{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/CalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [markedDates, setMarkedDates] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const eventData = await fetch(\"/api/events\").then(res => res.json());\n      setEvents(eventData);\n      const dates = eventData.map(event => new Date(event.date));\n      setMarkedDates(dates);\n    };\n    fetchEvents();\n  }, []);\n  const getDaysInMonth = date => {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  };\n  const getFirstDayOfMonth = date => {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  };\n  const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const isEventDate = date => {\n    return markedDates.some(markedDate => markedDate.getDate() === date && markedDate.getMonth() === currentDate.getMonth() && markedDate.getFullYear() === currentDate.getFullYear());\n  };\n  const navigateMonth = direction => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n  };\n  const renderCalendar = () => {\n    const daysInMonth = getDaysInMonth(currentDate);\n    const firstDayOfMonth = getFirstDayOfMonth(currentDate);\n    const days = [];\n\n    // Add empty cells for days before the first day of the month\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-10\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Add cells for each day of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      const isToday = day === new Date().getDate() && currentDate.getMonth() === new Date().getMonth() && currentDate.getFullYear() === new Date().getFullYear();\n      const hasEvent = isEventDate(day);\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-10 flex flex-col items-center justify-center relative\n            ${isToday ? 'bg-gray-700 rounded-lg' : ''}\n            ${hasEvent ? 'text-red-500 font-bold' : 'text-white'}\n            hover:bg-gray-700 rounded-lg cursor-pointer transition-colors`,\n        children: [day, hasEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1.5 h-1.5 bg-red-500 rounded-full absolute bottom-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-md mx-auto bg-gray-900 rounded-lg p-4 border border-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-white\",\n        children: [months[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigateMonth(-1),\n          className: \"px-3 py-1 text-white bg-gray-800 rounded hover:bg-gray-700\",\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(new Date()),\n          className: \"px-3 py-1 text-white bg-gray-800 rounded hover:bg-gray-700\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigateMonth(1),\n          className: \"px-3 py-1 text-white bg-gray-800 rounded hover:bg-gray-700\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1 mb-2\",\n      children: weekDays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-400 text-sm font-semibold\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1\",\n      children: renderCalendar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCalendar, \"ATFT6n0Bvu5UDmtZZwhuj4nncUU=\");\n_c = EventCalendar;\nexport default EventCalendar;\nvar _c;\n$RefreshReg$(_c, \"EventCalendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventCalendar","_s","currentDate","setCurrentDate","Date","events","setEvents","markedDates","setMarkedDates","fetchEvents","eventData","fetch","then","res","json","dates","map","event","date","getDaysInMonth","getFullYear","getMonth","getDate","getFirstDayOfMonth","getDay","weekDays","months","isEventDate","some","markedDate","navigateMonth","direction","renderCalendar","daysInMonth","firstDayOfMonth","days","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","day","isToday","hasEvent","children","onClick","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/CalendarView.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst EventCalendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [markedDates, setMarkedDates] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const eventData = await fetch(\"/api/events\").then((res) => res.json());\n      setEvents(eventData);\n      const dates = eventData.map((event) => new Date(event.date));\n      setMarkedDates(dates);\n    };\n    fetchEvents();\n  }, []);\n\n  const getDaysInMonth = (date) => {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  };\n\n  const getFirstDayOfMonth = (date) => {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  };\n\n  const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  const isEventDate = (date) => {\n    return markedDates.some(markedDate => \n      markedDate.getDate() === date &&\n      markedDate.getMonth() === currentDate.getMonth() &&\n      markedDate.getFullYear() === currentDate.getFullYear()\n    );\n  };\n\n  const navigateMonth = (direction) => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n  };\n\n  const renderCalendar = () => {\n    const daysInMonth = getDaysInMonth(currentDate);\n    const firstDayOfMonth = getFirstDayOfMonth(currentDate);\n    const days = [];\n    \n    // Add empty cells for days before the first day of the month\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(<div key={`empty-${i}`} className=\"h-10\" />);\n    }\n\n    // Add cells for each day of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      const isToday = \n        day === new Date().getDate() &&\n        currentDate.getMonth() === new Date().getMonth() &&\n        currentDate.getFullYear() === new Date().getFullYear();\n\n      const hasEvent = isEventDate(day);\n\n      days.push(\n        <div\n          key={day}\n          className={`h-10 flex flex-col items-center justify-center relative\n            ${isToday ? 'bg-gray-700 rounded-lg' : ''}\n            ${hasEvent ? 'text-red-500 font-bold' : 'text-white'}\n            hover:bg-gray-700 rounded-lg cursor-pointer transition-colors`}\n        >\n          {day}\n          {hasEvent && (\n            <div className=\"w-1.5 h-1.5 bg-red-500 rounded-full absolute bottom-1\" />\n          )}\n        </div>\n      );\n    }\n\n    return days;\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto bg-gray-900 rounded-lg p-4 border border-gray-800\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-bold text-white\">\n          {months[currentDate.getMonth()]} {currentDate.getFullYear()}\n        </h2>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => navigateMonth(-1)}\n            className=\"px-3 py-1 text-white bg-gray-800 rounded hover:bg-gray-700\"\n          >\n            ←\n          </button>\n          <button\n            onClick={() => setCurrentDate(new Date())}\n            className=\"px-3 py-1 text-white bg-gray-800 rounded hover:bg-gray-700\"\n          >\n            Today\n          </button>\n          <button\n            onClick={() => navigateMonth(1)}\n            className=\"px-3 py-1 text-white bg-gray-800 rounded hover:bg-gray-700\"\n          >\n            →\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-7 gap-1 mb-2\">\n        {weekDays.map(day => (\n          <div key={day} className=\"text-center text-gray-400 text-sm font-semibold\">\n            {day}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"grid grid-cols-7 gap-1\">\n        {renderCalendar()}\n      </div>\n    </div>\n  );\n};\n\nexport default EventCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}