{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/TaskCard.jsx\";\nimport React from \"react\";\nimport { updateTaskStatus } from \"../utilities/aip\"; // Ensure this function is implemented\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  tasks\n}) => {\n  const handleStatusChange = (taskId, status) => {\n    updateTaskStatus(taskId, status).then(() => {\n      // Optionally update task status in the state or notify parent component\n      // This is assuming you would update the tasks prop somehow if necessary\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-700 text-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded\",\n            onClick: () => handleStatusChange(task.id, \"In Progress\"),\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\",\n            onClick: () => handleStatusChange(task.id, \"Completed\"),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-gray-700 rounded-full h-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-purple-600 h-2 rounded-full transition-all duration-300\",\n            style: {\n              width: `${task.progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","updateTaskStatus","jsxDEV","_jsxDEV","TaskCard","tasks","handleStatusChange","taskId","status","then","className","children","map","task","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","description","style","width","progress","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/TaskCard.jsx"],"sourcesContent":["import React from \"react\";\nimport { updateTaskStatus } from \"../utilities/aip\"; // Ensure this function is implemented\n\nconst TaskCard = ({ tasks }) => {\n  const handleStatusChange = (taskId, status) => {\n    updateTaskStatus(taskId, status).then(() => {\n      // Optionally update task status in the state or notify parent component\n      // This is assuming you would update the tasks prop somehow if necessary\n    });\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {tasks.map((task) => (\n        <div key={task.id} className=\"bg-gray-700 text-white p-6 rounded-lg shadow-lg\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-2xl font-semibold\">{task.name}</h3>\n            <div className=\"flex space-x-4\">\n              <button\n                className=\"bg-blue-500 hover:bg-blue-700 px-4 py-2 rounded\"\n                onClick={() => handleStatusChange(task.id, \"In Progress\")}\n              >\n                In Progress\n              </button>\n              <button\n                className=\"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\"\n                onClick={() => handleStatusChange(task.id, \"Completed\")}\n              >\n                Completed\n              </button>\n            </div>\n          </div>\n          <p className=\"mt-4\">{task.description}</p>\n          <div className=\"mt-4\">\n            {/* Add your task progress bar here */}\n            <div className=\"w-full bg-gray-700 rounded-full h-2\">\n              <div\n                className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${task.progress}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC9B,MAAMC,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IAC7CP,gBAAgB,CAACM,MAAM,EAAEC,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM;MAC1C;MACA;IAAA,CACD,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdV,OAAA;MAAmBO,SAAS,EAAC,iDAAiD;MAAAC,QAAA,gBAC5ER,OAAA;QAAKO,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChDR,OAAA;UAAIO,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAEE,IAAI,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvDf,OAAA;UAAKO,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BR,OAAA;YACEO,SAAS,EAAC,iDAAiD;YAC3DS,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACO,IAAI,CAACO,EAAE,EAAE,aAAa,CAAE;YAAAT,QAAA,EAC3D;UAED;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTf,OAAA;YACEO,SAAS,EAAC,mDAAmD;YAC7DS,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACO,IAAI,CAACO,EAAE,EAAE,WAAW,CAAE;YAAAT,QAAA,EACzD;UAED;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNf,OAAA;QAAGO,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEE,IAAI,CAACQ;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1Cf,OAAA;QAAKO,SAAS,EAAC,MAAM;QAAAC,QAAA,eAEnBR,OAAA;UAAKO,SAAS,EAAC,qCAAqC;UAAAC,QAAA,eAClDR,OAAA;YACEO,SAAS,EAAC,4DAA4D;YACtEY,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAGV,IAAI,CAACW,QAAQ;YAAI;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GA3BEL,IAAI,CAACO,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA4BZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GA3CIrB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}