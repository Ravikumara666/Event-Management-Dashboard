{"ast":null,"code":"var _jsxFileName = \"/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/EventForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createEvent } from \"../utilities/aip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [eventName, setEventName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [statusMessage, setStatusMessage] = useState(\"\"); // For displaying success/failure messages\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const eventData = {\n      id: Date.now(),\n      // Generate a unique ID based on the current time (or use the server response ID)\n      name: eventName,\n      description,\n      location,\n      date\n    };\n\n    // Sending the data in JSON format\n    createEvent(eventData).then(response => {\n      onSubmit(response.data);\n      setStatusMessage(\"Event created successfully!\"); // Success message\n    }, error => {\n      setStatusMessage(\"Failed to create event. Please try again.\"); // Error message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-gray-800 p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-white mb-6\",\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value),\n        className: \"w-full p-2 rounded-lg\",\n        placeholder: \"Event Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"w-full p-2 rounded-lg\",\n        placeholder: \"Event Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        className: \"w-full p-2 rounded-lg\",\n        placeholder: \"Event Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        className: \"w-full p-2 rounded-lg\",\n        placeholder: \"Event Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-green-500 hover:bg-green-700 px-6 py-2 rounded\",\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-4 text-white ${statusMessage.includes(\"successfully\") ? \"bg-green-500\" : \"bg-red-500\"} p-3 rounded`,\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(EventForm, \"SgYsTaPjiPkdBA+t5AzxBBlB0+o=\");\n_c = EventForm;\nexport default EventForm;\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["React","useState","createEvent","jsxDEV","_jsxDEV","EventForm","onSubmit","_s","eventName","setEventName","description","setDescription","location","setLocation","date","setDate","statusMessage","setStatusMessage","handleSubmit","e","preventDefault","eventData","id","Date","now","name","then","response","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","includes","_c","$RefreshReg$"],"sources":["/Users/dravikumara/Desktop/http/Event Management Dashboard/dashboard-frontend/src/component/EventForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createEvent } from \"../utilities/aip\";\n\nconst EventForm = ({ onSubmit }) => {\n  const [eventName, setEventName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [statusMessage, setStatusMessage] = useState(\"\"); // For displaying success/failure messages\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const eventData = {\n      id: Date.now(), // Generate a unique ID based on the current time (or use the server response ID)\n      name: eventName,\n      description,\n      location,\n      date,\n    };\n    \n    // Sending the data in JSON format\n    createEvent(eventData).then(\n      (response) => {\n        onSubmit(response.data);\n        setStatusMessage(\"Event created successfully!\"); // Success message\n      },\n      (error) => {\n        setStatusMessage(\"Failed to create event. Please try again.\"); // Error message\n      }\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"bg-gray-800 p-6 rounded-lg shadow-lg\">\n      <h2 className=\"text-2xl font-semibold text-white mb-6\">Add Event</h2>\n      <div className=\"space-y-4\">\n        <input\n          type=\"text\"\n          value={eventName}\n          onChange={(e) => setEventName(e.target.value)}\n          className=\"w-full p-2 rounded-lg\"\n          placeholder=\"Event Name\"\n        />\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full p-2 rounded-lg\"\n          placeholder=\"Event Description\"\n        />\n        <input\n          type=\"text\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          className=\"w-full p-2 rounded-lg\"\n          placeholder=\"Event Location\"\n        />\n        <input\n          type=\"date\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n          className=\"w-full p-2 rounded-lg\"\n          placeholder=\"Event Date\"\n        />\n        <button type=\"submit\" className=\"bg-green-500 hover:bg-green-700 px-6 py-2 rounded\">\n          Create Event\n        </button>\n      </div>\n      {statusMessage && (\n        <div className={`mt-4 text-white ${statusMessage.includes(\"successfully\") ? \"bg-green-500\" : \"bg-red-500\"} p-3 rounded`}>\n          {statusMessage}\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default EventForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}